#!/usr/bin/env node
/**
 * wordpos_cli.js
 *
 *
 * Usage:
 *    node wordpos_cli --adj <file>
 *
 * Copyright (c) 2012 mooster@42at.com
 * https://github.com/moos/wordpos
 *
 * Released under MIT license
 */

var program = require('commander'),
  _ = require('underscore')._,
  pos = 'noun verb adj adv all'.split(' ');

program
  .version('0.0.1')
  .usage('[options] <file>|stdin')
  .option('-p, --pos <pos>', 'Get specific POS [noun|verb|adj|adv]', function(val){
    val = String(val).toLowerCase();
    return _.include(pos, val) && val;
    }, 'all')
//  .option('-r, --adv', 'Get adverbs')
//  .option('-n, --noun', 'Get nouns')
//  .option('-v, --verb', 'Get verbs')
  .option('-b, --brief', 'brief (un-vebose)')
  .option('-c, --column', 'column output')
  //.parse(process.argv);


program.command('get')
   .description('get pos from <file> or <stdin>')
   .action(function(cmd){
     console.log('get "%s"', cmd, arguments);
   });

program.command('is')
  .description('is word a particular pos')
  .action(function(cmd){
    console.log('is "%s"', cmd, arguments);
  });

program.command('lookup')
  .description('lookup word')
  .action(function(cmd){
    console.log('lookup "%s"', cmd, arguments);
  });


program.parse(process.argv);

if (!program.pos) return console.log(program.helpInformation());

return;

var
  WordPos = require('../src/wordpos'),
  fs = require('fs'),
  util = require('util'),
  results = {};


if (program.args.length) {
  fs.readFile(program.args[0], 'utf8', function(err, data){
    if (err) return console.log(err);
    run(data);
  });
} else {
  read_stdin(run);
}

function read_stdin(callback) {
  var data = '';
  process.stdin.resume();
  process.stdin.setEncoding('utf8');
  process.stdin.on('data', function (chunk) {
    //process.stdout.write('data: ' + chunk);
    var c = chunk.charCodeAt(0);
    if (c == 4 || c == 26) // ^c ^d
      return process.stdin.emit('end') && process.stdin.pause();

    data += chunk;
  });
  process.stdin.on('end', function () {
    callback(data);
  });
}


function run(data) {
  var
    wordpos = new WordPos(),
    cmds = {noun:'Nouns', verb:'Verbs', adj:'Adjectives', adv:'Adverbs'},
    fns = program.pos == 'all' ? cmds : [cmds[program.pos]];

  _(fns).each(function(fn){
    wordpos['get'+fn](data, _.bind(output,null,fn));
  });
}

function output(what, results) {
  var sep = program.column ? '\n' : ' ',
      str = !program.brief ? util.format('# %s %d:\n', what, results.length) : '';
  console.log(str + results.join(sep) + '\n');
}
